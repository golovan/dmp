
application {

  amazon {
    s3 = "/amazon_s3"
    s3 = ${?application.amazon.s3}
  }

  spark {
    master = "local[*]"
    master = ${?application.spark.master}
  }

  cassandra {
    host = "cassandra"
    host = ${?application.cassandra.host}
    username = ""
    username = ${?application.cassandra.username}
    password = ""
    password = ${?application.cassandra.password}
    table {
      twitter_tweets = "twitter_tweets"
      twitter_tweets = ${?application.cassandra.table.twitter_tweets}
      twitter_users = "twitter_users"
      twitter_users = ${?application.cassandra.table.twitter_users}
    }
    keyspace = "dmp"
    keyspace = ${?application.cassandra.keyspace}
  }

  twitter {
    consumer_key = ""
    consumer_key = ${?application.twitter.consumer_key}
    consumer_secret = ""
    consumer_secret = ${?application.twitter.consumer_secret}
    access_token = ""
    access_token = ${?application.twitter.access_token}
    access_token_secret = ""
    access_token_secret = ${?application.twitter.access_token_secret}
  }

  ################################################
  # Reactive Streams: AMQP Reference Config File #
  ################################################

  # This is the reference config file that contains all the default settings.
  # Make your edits/overrides in your application.conf.

  # This are sane defaults if you want to connect to the RabbitMQ broker
  # that is running on localhost.
  amqp {
    host = "rabbitmq"
    host = ${?application.amqp.host}

    # Rabbit port
    port = 5672
    port = ${?application.amqp.port}

    # An sequence of known broker addresses (hostname/port pairs)
    # to try in order. A random one will be picked during recovery.
    addresses = [
      {
        host = "localhost"
        host = ${?application.amqp.host}
        port = 5672
        port = ${?application.amqp.port}
      }
    ]

    # Virtual host to use when connecting to the broker.
    virtual-host = "/"
    virtual-host = ${?application.amqp.virtual-host}

    # User name to use when connecting to the broker.
    username = "guest"
    username = ${?application.amqp.username}

    # Password to use when connecting to the broker.
    password = "guest"
    password = ${?application.amqp.password}

    # Requested heartbeat interval.
    # - setting it to "disable" will disable heartbeat
    # - setting multiple of 1 second will enable heartbeat
    heartbeat = disable
    heartbeat = ${?application.amqp.heartbeat}

    # The default connection timeout.
    # - setting it to "infinite" will result in waiting without limit
    # - setting it to multiple of 1 millisecond will set the timeout
    timeout = infinite
    timeout = ${?application.amqp.timeout}

    # Enable automatic recovery
    automatic-recovery = false
    automatic-recovery = ${?application.amqp.automatic-recovery}

    # How long will automatic recovery wait before attempting to reconnect.
    recovery-interval = 5s
    recovery-interval = ${?application.amqp.recovery-interval}

    # Use SSL when connecting to the broker.
    # - setting it to "disable" will disable SSL
    # - passing in the SSL protocol to use e.g. "TLSv1" or "TLSv1.2" will enable SSL
    ssl = disable
    ssl = ${?application.amqp.ssl}

    exchange = "pro.faber.direct"
    exchange = ${?application.amqp.exchange}

    queue {
      extract = "pro.faber.extract"
      extract = ${?application.amqp.queue.extract}
      transform = "pro.faber.transform"
      transform = ${?application.amqp.queue.transform}
      load = "pro.faber.load"
      load = ${?application.amqp.queue.load}
    }
  }
}
